options {
  LOOKAHEAD = 1;
  CHOICE_AMBIGUITY_CHECK = 2;
  OTHER_AMBIGUITY_CHECK = 1;
  STATIC = true;
  DEBUG_PARSER = true;
  DEBUG_LOOKAHEAD = false;
  DEBUG_TOKEN_MANAGER = false;
  ERROR_REPORTING = true;
  JAVA_UNICODE_ESCAPE = false;
  UNICODE_INPUT = false;
  IGNORE_CASE = false;
  USER_TOKEN_MANAGER = false;
  USER_CHAR_STREAM = false;
  BUILD_PARSER = true;
  BUILD_TOKEN_MANAGER = true;
  SANITY_CHECK = true;
  FORCE_LA_CHECK = false;
  OUTPUT_DIRECTORY = "src/genParser";
}

PARSER_BEGIN(ExampleParser)

package genParser;

public class ExampleParser{
   public static void main(String args[]) throws ParseException {
      ExampleParser parser = new ExampleParser(System.in);
      parser.Input(1);
   }
}

PARSER_END(ExampleParser)

void Input(int i) :
{}
{ "a" {System.out.println("Es folgt "+i+". rekursiver Aufruf!");}
      Input(i+1) {System.out.println("Ende des " +i+ ". rekursiven Aufrufs fuer a!");}
 |"b" {System.out.println("Termination mit b");}
}